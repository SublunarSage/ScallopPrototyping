// Define the range of numbers
type number(N: i32) = N in 1..10

// Define the cells in the grid
type cell(R: i32, C: i32) = R in 0..9, C in 0..9

// Given clues (partially filled grid)
rel given(R: i32, C: i32, N: i32)

// Possible numbers for each cell
rel possible(R: i32, C: i32, N: i32) = cell(R, C), number(N), not given(R, C, _)

// A cell is valid if it's given or possible
rel valid(R: i32, C: i32, N: i32) = given(R, C, N) or possible(R, C, N)

// Constraints: unique numbers in rows, columns, and subgrids
rel conflict() = valid(R, C1, N), valid(R, C2, N), C1 != C2
rel conflict() = valid(R1, C, N), valid(R2, C, N), R1 != R2
rel conflict() = valid(R1, C1, N), valid(R2, C2, N), (R1 / 3 == R2 / 3), (C1 / 3 == C2 / 3), (R1 != R2 or C1 != C2)

// Ensure no conflicts
rel solution(R: i32, C: i32, N: i32) = valid(R, C, N), not conflict()
